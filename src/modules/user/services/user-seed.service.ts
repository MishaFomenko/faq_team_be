import { Injectable, OnModuleInit } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import * as bcrypt from 'bcrypt';
import { EUserRole } from 'src/common/enums/user-role.enum';
import { EUserStatus } from 'src/common/enums/user-status.enum';
import { UserRepository } from 'src/modules/repository/services/user.repository';

@Injectable()
export class UserSeederService implements OnModuleInit {
  constructor(
    private readonly userRepository: UserRepository,
    private readonly configService: ConfigService,
  ) {}

  async onModuleInit() {
    const users = [
      {
        full_name: 'John Doe',
        email: 'john.doe@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: null,
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '1234567890',
        address: '123 Main St',
        address_2: null,
        country: 'USA',
        city: 'New York',
        cloth_size: 'M',
        jeans_size: '32',
        shoes_size: 10,
      },
      {
        full_name: 'Jane Smith',
        email: 'jane.smith@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: '123456',
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '0987654321',
        address: '456 Elm St',
        address_2: null,
        country: 'USA',
        city: 'Los Angeles',
        cloth_size: 'S',
        jeans_size: '30',
        shoes_size: 8,
      },
      {
        full_name: 'Alice Johnson',
        email: 'alice.johnson@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: '654321',
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '1122334455',
        address: '789 Oak St',
        address_2: null,
        country: 'Canada',
        city: 'Toronto',
        cloth_size: 'L',
        jeans_size: '34',
        shoes_size: 9,
      },
      {
        full_name: 'Bob Brown',
        email: 'bob.brown@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: null,
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '2233445566',
        address: '101 Pine St',
        address_2: null,
        country: 'UK',
        city: 'London',
        cloth_size: 'XL',
        jeans_size: '36',
        shoes_size: 11,
      },
      {
        full_name: 'Charlie Green',
        email: 'charlie.green@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: '789012',
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '3344556677',
        address: '202 Cedar St',
        address_2: null,
        country: 'Australia',
        city: 'Sydney',
        cloth_size: 'M',
        jeans_size: '32',
        shoes_size: 10,
      },
      {
        full_name: 'David Wilson',
        email: 'david.wilson@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: null,
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '4455667788',
        address: '303 Birch St',
        address_2: null,
        country: 'USA',
        city: 'Chicago',
        cloth_size: 'L',
        jeans_size: '34',
        shoes_size: 12,
      },
      {
        full_name: 'Eve Davis',
        email: 'eve.davis@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: '210987',
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '5566778899',
        address: '404 Maple St',
        address_2: null,
        country: 'Germany',
        city: 'Berlin',
        cloth_size: 'S',
        jeans_size: '28',
        shoes_size: 7,
      },
      {
        full_name: 'Frank Miller',
        email: 'frank.miller@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 3,
        otp_code: null,
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '6677889900',
        address: '505 Walnut St',
        address_2: null,
        country: 'France',
        city: 'Paris',
        cloth_size: 'XL',
        jeans_size: '38',
        shoes_size: 13,
      },
      {
        full_name: 'Grace Lee',
        email: 'grace.lee@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: '321654',
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '7788990011',
        address: '606 Willow St',
        address_2: null,
        country: 'Japan',
        city: 'Tokyo',
        cloth_size: 'M',
        jeans_size: '32',
        shoes_size: 10,
      },
      {
        full_name: 'Hank Young',
        email: 'hank.young@example.com',
        password: 'password123',
        is_verified: true,
        filled_profile_step: 5,
        otp_code: null,
        user_status: EUserStatus.ACTIVE,
        is_deleted_by_admin: false,
        user_role: EUserRole.BUYER,
        avatar: null,
        phone: '8899001122',
        address: '707 Ash St',
        address_2: null,
        country: 'China',
        city: 'Beijing',
        cloth_size: 'L',
        jeans_size: '34',
        shoes_size: 9,
      },
    ];

    for (const user of users) {
      const salt = +this.configService.get<string>('SALT');
      const hashedPassword = await bcrypt.hash(user.password, salt);
      user.password = hashedPassword;
    }

    await this.userRepository.save(users);
  }
}
